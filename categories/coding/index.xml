<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Coding on Matt Bargenquast</title>
    <link>http://localhost:1313/categories/coding/</link>
    <description>Recent content in Coding on Matt Bargenquast</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 19 Nov 2022 12:49:48 +1000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/coding/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>I was a failed teenage game developer (part 1)</title>
      <link>http://localhost:1313/posts/failed-game-dev-1/</link>
      <pubDate>Sat, 19 Nov 2022 12:49:48 +1000</pubDate>
      <guid>http://localhost:1313/posts/failed-game-dev-1/</guid>
      <description>This blog first appeared in 2008 as a guest article for a friend’s (long since removed) website. To consolidate some of my previous writing in the one place, it has been re-posted with permission, with some edits and lots of additional media added. Think of it like the HD remaster of an old videogame, except it’s a videogame no-one played because it wasn’t very good.&#xA;I was a failed teenage game developer.</description>
    </item>
    <item>
      <title>To BRBEATLP.958 and beyond (Epilogue)</title>
      <link>http://localhost:1313/posts/mods-5/</link>
      <pubDate>Wed, 10 Feb 2021 20:22:00 +1000</pubDate>
      <guid>http://localhost:1313/posts/mods-5/</guid>
      <description>The story so far In order to explore the origins and prevalence of a personally-beloved drum loop sample named BRBEATLP.958, I fingerprinted and catalogued every sample of every MOD/S3M/XM/IT file in the Mod Archive so that I could hunt it down amidst tens of thousands of different songs. Now that we&amp;rsquo;ve solved that mystery, let&amp;rsquo;s wrap this up with an excursion through that data!&#xA;Disclaimer: I&amp;rsquo;ve done the best I can to clean the data I gathered and ensure its accuracy, but I&amp;rsquo;m not going to stake any rigorous claims of perfection against it.</description>
    </item>
    <item>
      <title>Keeping setuptools updated in OpenShift Python S2I</title>
      <link>http://localhost:1313/posts/s2i-python-setuptools/</link>
      <pubDate>Tue, 19 Jan 2021 20:42:00 +1000</pubDate>
      <guid>http://localhost:1313/posts/s2i-python-setuptools/</guid>
      <description>After a recent commit to a Python project that I work on, I noticed that my resulting OpenShift pod had begun crashlooping after the rebuild.&#xA;A quick check of the pod logs showed why: for some reason, it could no longer find the alembic module, despite that being a transitive dependency of SQLAlchemy, which my project already had in its requirements.txt.&#xA;Curious, I checked the build logs and noticed an odd error during the dependency install:</description>
    </item>
    <item>
      <title>To BRBEATLP.958 and beyond (part 4): A mystery solved</title>
      <link>http://localhost:1313/posts/mods-4/</link>
      <pubDate>Fri, 01 Jan 2021 10:22:00 +1000</pubDate>
      <guid>http://localhost:1313/posts/mods-4/</guid>
      <description>The story so far In order to explore the origins and prevalence of a personally-beloved drum loop sample named BRBEATLP.958, I&amp;rsquo;ve fingerprinted and catalogued every sample of every MOD/S3M/XM/IT file in the Mod Archive so that I can hunt it down amidst tens of thousands of different songs. Now it&amp;rsquo;s time to see where this takes us.&#xA;Part one Part two Part three How many songs used BRBEATLP.958? I found fifty-four different songs which all used (or at least included) BRBEATLP.</description>
    </item>
    <item>
      <title>To BRBEATLP.958 and beyond (part 3): Parsing ancient scriptures</title>
      <link>http://localhost:1313/posts/mods-3/</link>
      <pubDate>Thu, 31 Dec 2020 10:27:00 +1000</pubDate>
      <guid>http://localhost:1313/posts/mods-3/</guid>
      <description>The story so far Obsessed with the muffled, 8KHz mono perfection of a drum-loop used in an old ScreamTracker III module, I aim to seek out how many other modules may have used the same sample.. but not before some hard nostalgia-blast reminiscing over the tracking subculture as a whole.&#xA;Part one Part two Forming the battle plan First thing&amp;rsquo;s first: if I was to figure out how many other songs might&amp;rsquo;ve used BRBEATLP.</description>
    </item>
    <item>
      <title>Advent of Code 2020 reflections</title>
      <link>http://localhost:1313/posts/aoc-2020/</link>
      <pubDate>Sat, 26 Dec 2020 14:07:21 +1000</pubDate>
      <guid>http://localhost:1313/posts/aoc-2020/</guid>
      <description>Advent of Code has wrapped for another year, so I figured I’d write a companion piece to last year’s blog about the same topic with some brief thoughts and reflections on 2020’s event.&#xA;Overall feelings I quite enjoyed this year’s collection of puzzles. Unlike last year’s Intcode theme - which spanned almost the entirety of the month - each puzzle this year was its own standalone thing. There were also no puzzles that I felt demanded much algorithmic knowledge, with nary a shortest-path problem to be seen - much to my relief, as they’ve historically always been the more challenging ones for me.</description>
    </item>
    <item>
      <title>To BRBEATLP.958 and beyond (part 2): Learning the family tree</title>
      <link>http://localhost:1313/posts/mods-2/</link>
      <pubDate>Sun, 09 Aug 2020 16:51:52 +1000</pubDate>
      <guid>http://localhost:1313/posts/mods-2/</guid>
      <description>The big four One of the fascinating aspects of tracker music is the way in which it has evolved over the last three decades. A whole ecosystem of music creation tools grew from the homebrew efforts of talented programmers and musicians. Composition programs were born, forked, cloned, abandoned and reborn. File formats, too, were devised and revised - and sometimes even documented. Composers migrated from tool to tool as successive programs presented them with more sophisticated abilities to realize the music in their head.</description>
    </item>
    <item>
      <title>To BRBEATLP.958 and beyond: archaeological digs through tracker music (part 1)</title>
      <link>http://localhost:1313/posts/mods-1/</link>
      <pubDate>Sun, 14 Jun 2020 20:16:39 +1000</pubDate>
      <guid>http://localhost:1313/posts/mods-1/</guid>
      <description>Preamble In my small amounts of spare time these past few lockdown-fueled months, I&amp;rsquo;ve been casually poking at a dumb idea. Like so many dumb ideas, it didn&amp;rsquo;t really amount to much itself, but it did spawn some other successively dumber ideas. And, well, those didn&amp;rsquo;t amount to much either. But! It sure was a fun, nostalgic and educational ride.. and I guess there&amp;rsquo;s a bit of entertaining trivia to be gained along the way.</description>
    </item>
    <item>
      <title>Shells, pipes and precedence</title>
      <link>http://localhost:1313/posts/bash-pipes/</link>
      <pubDate>Sat, 25 Apr 2020 14:45:38 +1000</pubDate>
      <guid>http://localhost:1313/posts/bash-pipes/</guid>
      <description>A fun distraction occurred this week when the following snippet of bash code was suggested in a pull request (simplified for demonstrative clarity):&#xA;1if [ echo $VAR1 | grep -q &amp;#34;text&amp;#34; ] || [ $VAR2 -eq 0 ]; then 2 echo &amp;#34;If test passed.&amp;#34; 3else 4 echo &amp;#34;If test failed.&amp;#34; 5fi Taken at initial face value, it looked like it should work okay. There didn&amp;rsquo;t appear to be anything immediately wrong with its syntax.</description>
    </item>
    <item>
      <title>Advent of Code 2019: personal wrap-up</title>
      <link>http://localhost:1313/posts/aoc-2019-wrapup/</link>
      <pubDate>Sun, 29 Dec 2019 09:52:59 +1000</pubDate>
      <guid>http://localhost:1313/posts/aoc-2019-wrapup/</guid>
      <description>In the previous blog I described why Advent of Code is an awesome and creative way to exercise your programming skills. A few days ago I wrapped up 2019&amp;rsquo;s problems, although I must admit I needed some serious help (read: reading someone else&amp;rsquo;s solution) to do Day 22 Part 2.&#xA;This year was also the first year that I managed to convince some work colleagues to join me on the AoC train, which made for some fun watercooler discussions in the morning where we could talk about the ways we solved (or got stuck) on the previous day&amp;rsquo;s problem.</description>
    </item>
    <item>
      <title>Why you should try Advent of Code</title>
      <link>http://localhost:1313/posts/aoc-2019/</link>
      <pubDate>Sat, 28 Dec 2019 13:27:21 +1000</pubDate>
      <guid>http://localhost:1313/posts/aoc-2019/</guid>
      <description>Why AoC? I&amp;rsquo;ve long wanted to write a blog promoting the merits of Advent of Code and - since it has just wrapped up its fifth year - there seems to be no better time like the present.&#xA;Advent of Code (or AoC as I&amp;rsquo;ll refer to it hereafter) is a solo effort by Eric Wastl. Commencing each year on December 1st, it presents an advent calendar-style series of daily programming challenges in the lead-up to Christmas.</description>
    </item>
  </channel>
</rss>
